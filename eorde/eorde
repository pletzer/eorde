#!/usr/bin/env python

import argparse
import sys
import netCDF4
import numpy
from eoPlanet import Planet
from eoColorCells import ColorCells
from eoColorPoints import ColorPoints
from eoContours import Contours
from eoColorbar import Colorbar
from eoDateTimes import DateTimes
from eoScene import Scene

def main(ar):

    parser = argparse.ArgumentParser(description='Visualize earth data')
    parser.add_argument('-c', dest='cellStdName', default='', help='Color cell variable')
    parser.add_argument('-p', dest='pointStdName', default='', help='Color point variable')
    parser.add_argument('-i', dest='isoStdName', default='', help='Show isolines of variable')
    parser.add_argument('-f', dest='filename', default='', help='File name')
    args = parser.parse_args()

    if not len(args.filename):
        print('ERROR: must supply a file name')
        sys.exit(1)

    filename = args.filename

    planet = Planet(level=0)

    pipelines = [planet]

    color = None
    if args.cellStdName:
        cellColor = ColorCells(filename=filename, varStandardName=args.cellStdName, level=1)
        pipelines.append(cellColor)
        color = cellColor
    elif args.pointStdName:
        pointColor = ColorPoints(filename=filename, varStandardName=args.pointStdName, level=1)
        pipelines.append(pointColor)
        color = pointColor

    if args.isoStdName:
        contour = Contours(filename=filename, varStandardName=args.isoStdName, level=2)
        pipelines.append(contour)
    

    if color:
        colorbar = Colorbar(color.getLookupTable())
        pipelines.append(colorbar)

    if color:
        dateTimes = DateTimes(dts=color.getDateTimes(), pos=(0.6, 0.9), size=52, color=(0.2, 0.2, 0.2))
        pipelines.append(dateTimes)

    s = Scene()
    s.setWindowSize(1260, 960)
    s.setBackground(0.7, 0.7, 0.7)
    s.addPipelines(pipelines)
    s.start()


if __name__ == '__main__':
    main(sys.argv)




