#!/usr/bin/env python

import argparse
import sys
import netCDF4
import numpy
from eorde.eoPlanet import Planet
from eorde.eoColorCells import ColorCells
from eorde.eoColorPoints import ColorPoints
from eorde.eoContours import Contours
from eorde.eoContinents import Continents
from eorde.eoColorbar import Colorbar
from eorde.eoDateTimes import DateTimes
from eorde.eoScene import Scene

def main(ar):

    parser = argparse.ArgumentParser(description='Visualize earth data')
    parser.add_argument('-c', dest='cellStdName', default='', help='Color cell variable')
    parser.add_argument('-p', dest='pointStdName', default='', help='Color point variable')
    parser.add_argument('-i', dest='isoStdName', default='', help='Show isolines of variable')
    parser.add_argument('-C', dest='continents', action='store_true', help='Show continents')
    parser.add_argument('-f', dest='filename', default='', help='File name')
    args = parser.parse_args()

    if not len(args.filename):
        print('ERROR: must supply a file name')
        sys.exit(1)

    filename = args.filename

    planet = Planet(level=0)

    pipelines = [planet]

    color = None
    if args.cellStdName:
        cellColor = ColorCells(filename=filename, varStandardName=args.cellStdName, level=1)
        pipelines.append(cellColor)
        color = cellColor
    elif args.pointStdName:
        pointColor = ColorPoints(filename=filename, varStandardName=args.pointStdName, level=1)
        pipelines.append(pointColor)
        color = pointColor

    if args.isoStdName:
        contour = Contours(filename=filename, varStandardName=args.isoStdName, level=2)
        contour.setLineThickness(2)
        pipelines.append(contour)
        color = contour

    if args.continents:
        continents = Continents(level=2)
        pipelines.append(continents)

    if color:
        colorbar = Colorbar(color.getLookupTable())
        pipelines.append(colorbar)

    if color:
        dateTimes = DateTimes(dts=color.getDateTimes(), pos=(0.6, 0.9), size=52, color=(0.2, 0.2, 0.2))
        pipelines.append(dateTimes)

    s = Scene()
    s.setWindowSize(1260, 960)
    s.setBackground(0.7, 0.7, 0.7)
    s.addPipelines(pipelines)
    s.start()


if __name__ == '__main__':
    main(sys.argv)




